package Client_Master;

import javax.swing.*;
import java.io.IOException;

public class RealizarPedido extends javax.swing.JFrame {

    /**
     * Creates new form RealizarPedidos
     */
    public RealizarPedido() throws IOException {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() throws IOException {

        labelSeleccion = new javax.swing.JLabel();
        botonVolver = new javax.swing.JButton();
        labelPlatilloName = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        labelMenu = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        menuTextArea = new javax.swing.JTextArea();
        labelPlatillosEnPedido = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        platillosTextArea = new javax.swing.JTextArea();
        botonBorrarPedido = new javax.swing.JButton();
        botonAgregarPlatillo = new javax.swing.JButton();
        botonRealizarPedido = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        labelSeleccion.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 24)); // NOI18N
        labelSeleccion.setForeground(new java.awt.Color(255, 51, 51));
        labelSeleccion.setText("Seleccione su platillo");
        labelSeleccion.setAlignmentY(0.0F);
        labelSeleccion.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        botonVolver.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 12)); // NOI18N
        botonVolver.setText("Volver");
        botonVolver.setToolTipText("");
        botonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonVolverActionPerformed(evt);
            }
        });

        labelPlatilloName.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 12)); // NOI18N
        labelPlatilloName.setText("Nombre del platillo que desea agregar al pedido");

        nameField.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 12)); // NOI18N
        nameField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        labelMenu.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 12)); // NOI18N
        labelMenu.setText("Menu");

        menuTextArea.setEditable(false);
        menuTextArea.setColumns(15);
        menuTextArea.setRows(5);
        jScrollPane1.setViewportView(menuTextArea);
        /**
         * Se le envia una seÃ±al al server
         * para obtener el menu en un string
         * y se le muestra al usuario en un
         * textbox.
         */
        Sockets.out.println("getMenu");
        int cantPlatillos = Integer.parseInt(Sockets.in.readLine());
        String r = "";
        while (cantPlatillos > 0) {
            r = r + Sockets.in.readLine() + "\n" + Sockets.in.readLine() + "\n" + Sockets.in.readLine() + "\n" + Sockets.in.readLine() + "\n\n";
            cantPlatillos--;
        }
        Sockets.in.readLine();
        menuTextArea.setText(r);

        labelPlatillosEnPedido.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 12)); // NOI18N
        labelPlatillosEnPedido.setText("Platillos en el pedido");

        platillosTextArea.setEditable(false);
        platillosTextArea.setColumns(15);
        platillosTextArea.setRows(5);
        jScrollPane2.setViewportView(platillosTextArea);

        botonBorrarPedido.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 12)); // NOI18N
        botonBorrarPedido.setText("Borrar Pedido");
        botonBorrarPedido.setToolTipText("");
        botonBorrarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    botonBorrarPedidoActionPerformed(evt);
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        botonAgregarPlatillo.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 12)); // NOI18N
        botonAgregarPlatillo.setText("Agregar Platillo");
        botonAgregarPlatillo.setToolTipText("");
        botonAgregarPlatillo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    botonAgregarPlatilloActionPerformed(evt);
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        botonRealizarPedido.setFont(new java.awt.Font("Copperplate Gothic Bold", 0, 12)); // NOI18N
        botonRealizarPedido.setText("Realizar Pedido");
        botonRealizarPedido.setToolTipText("");
        botonRealizarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    botonRealizarPedidoActionPerformed(evt);
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(47, 47, 47))
                        .addGroup(layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(botonBorrarPedido)
                                        .addComponent(labelMenu))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(labelPlatillosEnPedido)
                                                .addGap(66, 66, 66))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(39, 39, 39)
                                                .addComponent(botonAgregarPlatillo)
                                                .addGap(45, 45, 45)
                                                .addComponent(botonRealizarPedido)
                                                .addContainerGap(28, Short.MAX_VALUE))))
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(botonVolver))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(122, 122, 122)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(13, 13, 13)
                                                                .addComponent(labelSeleccion)
                                                                .addGap(13, 13, 13))
                                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                .addComponent(labelPlatilloName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                .addComponent(nameField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(botonVolver)
                                .addGap(3, 3, 3)
                                .addComponent(labelSeleccion, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(labelPlatilloName)
                                .addGap(18, 18, 18)
                                .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(botonBorrarPedido)
                                        .addComponent(botonAgregarPlatillo)
                                        .addComponent(botonRealizarPedido))
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(labelMenu)
                                        .addComponent(labelPlatillosEnPedido))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                                        .addComponent(jScrollPane2))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>

    /**
     * Funcionalidad de boton para
     * volver a la ventana anterior
     * @param evt
     */
    private void botonVolverActionPerformed(java.awt.event.ActionEvent evt) {
        ClientApp cliente = new ClientApp();
        cliente.setVisible(true);
        cliente.setLocationRelativeTo(null);
        this.setVisible(false);
    }

    /**
     * Funcionalidad de boton para
     * borrar el pedido actual, se
     * envia un output al servidor para
     * que llame al metodo que elimina
     * los contenidos del pedido y
     * se muestra al usuario
     * @param evt se presiona el boton
     * @throws IOException en caso de que el socket de error
     */
    private void botonBorrarPedidoActionPerformed(java.awt.event.ActionEvent evt) throws IOException {
        Sockets.out.println("eliminarPedido");
        JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), Sockets.in.readLine(), "", JOptionPane.ERROR_MESSAGE);
        platillosTextArea.setText("");
    }

    /**
     * Funcionalidad de boton para
     * agregarun platillo a
     * el pedido actual, se
     * envia un output al servidor para
     * que llame al metodo que agrega platillos
     * al pedido y se muestra al usuario
     * @param evt se presiona el boton
     * @throws IOException en caso de que el socket de error
     */
    private void botonAgregarPlatilloActionPerformed(java.awt.event.ActionEvent evt) throws IOException {
        Sockets.out.println("agregarPlatilloAPedido");
        Sockets.out.println(nameField.getText());
        int cantidadPlatillosEnPedido = Integer.parseInt(Sockets.in.readLine());
        String str = "";
        while (cantidadPlatillosEnPedido > 0) {
            str = str + Sockets.in.readLine() + "\n";
            cantidadPlatillosEnPedido--;
        }
        Sockets.in.readLine();
        platillosTextArea.setText(str);

    }

    /**
     * Funcionalidad de boton para realizar
     * el pedido, se envia un output al
     * servidor para que llame a la funcion
     * que realiza el pedido con los contenidos
     * que tiene en ese momento, se muestra al
     * usuario la informacion necesaria.
     * @param evt se presiona el boton
     * @throws IOException en caso de que el socket de error
     */
    private void botonRealizarPedidoActionPerformed(java.awt.event.ActionEvent evt) throws IOException {
        Sockets.out.println("realizarPedido");
        JOptionPane.showMessageDialog(JOptionPane.getRootFrame(), Sockets.in.readLine(), "", JOptionPane.ERROR_MESSAGE);
        platillosTextArea.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RealizarPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RealizarPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RealizarPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RealizarPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new RealizarPedido().setVisible(true);
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JButton botonAgregarPlatillo;
    private javax.swing.JButton botonBorrarPedido;
    private javax.swing.JButton botonRealizarPedido;
    private javax.swing.JButton botonVolver;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelMenu;
    private javax.swing.JLabel labelPlatilloName;
    private javax.swing.JLabel labelPlatillosEnPedido;
    private javax.swing.JLabel labelSeleccion;
    private javax.swing.JTextArea menuTextArea;
    private javax.swing.JTextField nameField;
    private javax.swing.JTextArea platillosTextArea;
    // End of variables declaration
}
